import{aG as t,aH as e,aI as i,aJ as r,aK as s,aL as a}from"./index-Czm3MDyH.js";class n{player=null;state=t.IDLE;volume=1;isPlayerStarted=!1;emitter=e();autoplayStatus=i.UNKNOWN;pendingPlayPromise=null;pendingPlayResolve=null;pendingPlayReject=null;config;constructor(t){this.config={decode:!1,sampleRate:16e3,realtime:!1,maxDelay:800,discardAll:!1,trafficImgUrl:"",channels:1,...t},this.initPlayer(),this.detectAutoplaySupport(),r.getInstance().onStatusChange(s.AUDIO,this.handleAutoplayStatusChange.bind(this))}initPlayer(){if(a.BufferStreamPlayer)try{a.TrafficImgUrl=this.config.trafficImgUrl,this.player=a.BufferStreamPlayer({decode:this.config.decode,sampleRate:this.config.sampleRate,realtime:this.config.realtime,maxDelay:this.config.maxDelay,discardAll:this.config.discardAll,TrafficImgUrl:this.config.trafficImgUrl,onInputError:(t,e)=>{this.emitter.emit("onError",new Error(`音频片段输入出错: ${t}`))},onPlayEnd:()=>{this.setState(t.ENDED),this.emitter.emit("onEnd",null)}})}catch(e){this.emitter.emit("onError",e instanceof Error?e:new Error(String(e)))}}async detectAutoplaySupport(t=!1){const e=await r.getInstance().detectMediaSupport(s.AUDIO,t);return this.autoplayStatus=e.status,e}async requestAutoplayPermission(t=!1){const e=await r.getInstance().requestPermission(s.AUDIO,t);return this.autoplayStatus=e.status,e}handleAutoplayStatusChange(t){this.autoplayStatus=t.status,this.emitter.emit("onAutoplayStatusChange",t)}async startStream(e,r){if(void 0!==e&&(this.config.sampleRate=e),void 0!==r&&(this.config.channels=r),!this.player&&(this.initPlayer(),!this.player))throw new Error("流式音频播放器初始化失败");return this.isPlayerStarted&&(await this.pause(),await this.player.clearInput()),this.autoplayStatus===i.UNKNOWN&&await this.detectAutoplaySupport(),new Promise((e,r)=>{try{if(this.autoplayStatus===i.ALLOWED)this.player.start(()=>{this.isPlayerStarted=!0,this.setState(t.READY),this.emitter.emit("onPlay",null),e()},e=>{this.isPlayerStarted=!1,this.setState(t.ERROR),this.emitter.emit("onError",new Error(e)),r(new Error(e))});else if(this.autoplayStatus===i.ALLOWED_MUTED){const i=this.volume;this.setVolume(0),this.player.start(()=>{this.isPlayerStarted=!0,this.setState(t.READY),this.emitter.emit("onPlay",null);const r=()=>{this.setVolume(i),document.removeEventListener("click",r),document.removeEventListener("touchstart",r),document.removeEventListener("keydown",r)};document.addEventListener("click",r),document.addEventListener("touchstart",r),document.addEventListener("keydown",r),e()},e=>{this.isPlayerStarted=!1,this.setState(t.ERROR),this.emitter.emit("onError",new Error(e)),r(new Error(e))})}else{const t={status:this.autoplayStatus,requiresUserInteraction:!0,requiresMuted:!1};this.emitter.emit("onAutoplayBlocked",t),this.pendingPlayPromise=new Promise((t,e)=>{this.pendingPlayResolve=t,this.pendingPlayReject=e});const i=e,s=r;this.pendingPlayPromise.then(()=>{i()}).catch(t=>{s(t)})}}catch(s){this.isPlayerStarted=!1,this.setState(t.ERROR),this.emitter.emit("onError",s instanceof Error?s:new Error(String(s))),r(s)}})}async resumeAfterInteraction(){try{if(!this.player)throw new Error("流式音频播放器未初始化");this.player.start(()=>{this.isPlayerStarted=!0,this.setState(t.READY),this.emitter.emit("onPlay",null),this.pendingPlayResolve&&(this.pendingPlayResolve(),this.pendingPlayPromise=null,this.pendingPlayResolve=null,this.pendingPlayReject=null),this.detectAutoplaySupport(!0)},e=>{this.isPlayerStarted=!1,this.setState(t.ERROR),this.emitter.emit("onError",new Error(e)),this.pendingPlayReject&&(this.pendingPlayReject(new Error(e)),this.pendingPlayPromise=null,this.pendingPlayResolve=null,this.pendingPlayReject=null)})}catch(e){throw this.setState(t.ERROR),this.emitter.emit("onError",e instanceof Error?e:new Error(String(e))),this.pendingPlayReject&&(this.pendingPlayReject(e instanceof Error?e:new Error(String(e))),this.pendingPlayPromise=null,this.pendingPlayResolve=null,this.pendingPlayReject=null),e}}appendStreamData(e){if(this.player&&this.isPlayerStarted)try{if(this.state===t.PAUSED&&(this.setState(t.PLAYING),this.emitter.emit("onPlay",null)),e instanceof Float32Array){const t=new Int16Array(e.length);for(let i=0;i<e.length;i++)t[i]=Math.max(-32768,Math.min(32767,Math.round(32767*e[i])));this.player.input(t)}else e instanceof Int16Array?this.player.input(e):e instanceof ArrayBuffer&&this.player.input(new Int16Array(e));this.state!==t.PLAYING&&this.setState(t.PLAYING)}catch(i){this.emitter.emit("onError",i instanceof Error?i:new Error(String(i)))}}async stopStream(){if(this.player)try{this.player.stop&&this.player.stop(),this.isPlayerStarted=!1,this.setState(t.IDLE),this.emitter.emit("onStop",null)}catch(e){this.emitter.emit("onError",e instanceof Error?e:new Error(String(e)))}}pause(e){if(this.player&&this.isPlayerStarted)try{this.player.pause&&(this.player.pause(),this.setState(t.PAUSED),this.emitter.emit("onPause",null)),e&&this.clearInput()}catch(i){this.emitter.emit("onError",i instanceof Error?i:new Error(String(i)))}}clearInput(t){this.player&&this.isPlayerStarted&&this.player.clearInput(t)}async resume(){if(this.player&&this.isPlayerStarted)try{this.player.resume&&(this.player.resume(),this.setState(t.PLAYING),this.emitter.emit("onPlay",null))}catch(e){this.emitter.emit("onError",e instanceof Error?e:new Error(String(e)))}}stop(){this.stopStream()}setVolume(t){this.volume=Math.max(0,Math.min(1,t)),this.player&&this.player.setVolume&&(this.player.setVolume(this.volume),this.emitter.emit("onVolumeChange",this.volume))}getVolume(){return this.volume}getState(){return this.state}setState(t){if(this.state!==t){const e=this.state;this.state=t,this.emitter.emit("onStateChange",{oldState:e,newState:t})}}on(t,e){this.emitter.on(t,e)}off(t){this.emitter.off(t)}destroy(){try{this.stopStream(),this.player&&this.player.destroy&&this.player.destroy(),this.player=null,this.isPlayerStarted=!1,this.emitter.all.clear(),this.setState(t.IDLE)}catch(e){}}}export{n as S};
