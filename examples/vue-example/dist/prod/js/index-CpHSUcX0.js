import{q as o,t as r,n as e,c as a,b as i,a3 as s,ae as l,I as n,w as t}from"./index-DS3FT4GI.js";import{k as c,r as d,g as u,f as g,w as v,l as f,b as h,n as p,j as m,s as y,af as w,m as b}from"./vue-vendor-CnVaDBlt.js";const[S,z]=a("image");const L=t(c({name:S,props:{src:String,alt:String,fit:String,position:String,round:Boolean,block:Boolean,width:e,height:e,radius:e,lazyLoad:Boolean,iconSize:e,showError:r,errorIcon:o("photo-fail"),iconPrefix:String,showLoading:r,loadingIcon:o("photo"),crossorigin:String,referrerpolicy:String,decoding:String},emits:["load","error"],setup(o,{emit:r,slots:e}){const a=d(!1),t=d(!0),c=d(),{$Lazyload:S}=u().proxy,L=g(()=>{const r={width:i(o.width),height:i(o.height)};return s(o.radius)&&(r.overflow="hidden",r.borderRadius=i(o.radius)),r});v(()=>o.src,()=>{a.value=!1,t.value=!0});const j=o=>{t.value&&(t.value=!1,r("load",o))},x=()=>{const o=new Event("load");Object.defineProperty(o,"target",{value:c.value,enumerable:!0}),j(o)},I=o=>{a.value=!0,t.value=!1,r("error",o)},P=(r,e,a)=>a?a():m(n,{name:r,size:o.iconSize,class:e,classPrefix:o.iconPrefix},null),$=()=>{if(a.value||!o.src)return;const r={alt:o.alt,class:z("img"),decoding:o.decoding,style:{objectFit:o.fit,objectPosition:o.position},crossorigin:o.crossorigin,referrerpolicy:o.referrerpolicy};return o.lazyLoad?y(m("img",b({ref:c},r),null),[[w("lazy"),o.src]]):m("img",b({ref:c,src:o.src,onLoad:j,onError:I},r),null)},k=({el:o})=>{const r=()=>{o===c.value&&t.value&&x()};c.value?r():p(r)},E=({el:o})=>{o!==c.value||a.value||I()};return S&&l&&(S.$on("loaded",k),S.$on("error",E),f(()=>{S.$off("loaded",k),S.$off("error",E)})),h(()=>{p(()=>{var r;(null==(r=c.value)?void 0:r.complete)&&!o.lazyLoad&&x()})}),()=>{var r;return m("div",{class:z({round:o.round,block:o.block}),style:L.value},[$(),t.value&&o.showLoading?m("div",{class:z("loading")},[P(o.loadingIcon,z("loading-icon"),e.loading)]):a.value&&o.showError?m("div",{class:z("error")},[P(o.errorIcon,z("error-icon"),e.error)]):void 0,null==(r=e.default)?void 0:r.call(e)])}}}));export{L as I};
